name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          # Build API
          docker build -f api/Dockerfile -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api:latest .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api:latest
          
          # Build Bot
          docker build -f bot/Dockerfile -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-bot:latest .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-bot:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: prod


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml,.env.example"
          target: "~/knowledge-base-bot"

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/knowledge-base-bot
            
            # Login to registry
            echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Pull latest images
            docker pull ghcr.io/${{ github.repository }}-api:latest
            docker pull ghcr.io/${{ github.repository }}-bot:latest
            
            # Restart
            docker-compose -f docker-compose.yml down
            docker-compose -f docker-compose.yml up -d
            
            # Clean old images
            docker image prune -f